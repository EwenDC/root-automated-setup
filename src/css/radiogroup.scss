.radio {
  margin-top: 0.75rem;
  display: flex;
  align-items: flex-start;
  flex-direction: column;
  border: none;
  padding: 0;

  > .option {
    display: flex;

    &:not(:first-child) {
      margin-top: 0.5rem;
    }

    > input {
      cursor: pointer;
      flex: none;
      /* Override the default radio appearance */
      appearance: none;
      width: 1.15rem;
      height: 1.15rem;
      border: 0.15rem solid black;
      border-radius: 50%;
      transform: translateY(0.16rem);
      display: grid;
      place-content: center;
      background-color: transparent;
      transition: 80ms background-color ease-out;

      &:hover:not(:disabled) {
        background-color: white;
      }

      &:active:not(:disabled) {
        background-color: cornsilk;
      }

      &:checked::before {
        box-shadow: inset 1rem 1rem black;
      }

      &:disabled {
        border-color: darkgray;
        cursor: auto;

        &::before {
          box-shadow: inset 1rem 1rem darkgray;
        }
      }

      &:focus-visible {
        outline: 0.15rem dotted black;
        outline-offset: 0.05rem;
      }

      &::before {
        content: "";
        width: 0.65rem;
        height: 0.65rem;
        border-radius: 50%;
        clip-path: polygon(14% 44%, 0% 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
        box-shadow: inset 1rem 1rem transparent;
        transition-property: box-shadow;
        transition-duration: inherit;
        transition-timing-function: inherit;

        section.inactive & {
          transition: none;
        }
      }
    }

    > label {
      cursor: pointer;
      padding-left: 0.5rem;

      section.inactive & {
        cursor: auto;
      }
    }
  }
}

@mixin large-screen {
  .radio {
    flex-direction: row;

    > .option {
      &:not(:first-child) {
        margin-top: 0;
      }

      &:not(:last-child) > label {
        padding-right: 1rem;
      }
    }
  }
}

@mixin reduced-motion {
  .radio > .option > input {
    transition: none;
  }
}

@mixin forced-colors {
  .radio > .option > input::before {
    background-color: CanvasText;
  }
}
